name: Pull request üôè

on:
  pull_request:
    types: [ opened, synchronize, reopened ]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build App
    runs-on: ubuntu-latest
    concurrency:
      group: build-linux-${{ github.workflow }}-${{ github.head_ref }}
      cancel-in-progress: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
          ssh-key: ${{ secrets.SSH_KEY }}
          ref: ${{ github.event.pull_request.head.ref }}
          persist-credentials: false
          fetch-depth: 0

      - name: setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          cache-read-only: true

      - name: Validate Gradle Wrapper
        uses: gradle/actions/wrapper-validation@v4

      - name: Cache and Restore BuildCache
        uses: actions/cache@v4
        with:
          path: '**/build-cache/**'
          key: build-${{ github.sha }}
          restore-keys: |
            build-${{ github.sha }}
            build-

      - name: Build App
        run: ./gradlew bundleDebug -x check --stacktrace

  conventions:
    name: BuildSetup Health
    needs: build
    permissions:
      contents: read
      checks: write
    runs-on: ubuntu-latest
    concurrency:
      group: conventions-plugins-${{ github.workflow }}-${{ github.head_ref }}
      cancel-in-progress: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
          ssh-key: ${{ secrets.SSH_KEY }}
          ref: ${{ github.event.pull_request.head.ref }}
          persist-credentials: false
          fetch-depth: 0
      - name: setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          cache-read-only: true

      - name: Validate Gradle Wrapper
        uses: gradle/actions/wrapper-validation@v4

      - name: Restore BuildCache
        uses: actions/cache/restore@v4
        with:
          path: '**/build-cache/**'
          key: build-${{ github.sha }}
          restore-keys: |
            build-${{ github.sha }}
            build-

      - name: Run Plugin Tests
        run: ./gradlew :convention:test --stacktrace

      - name: Upload Reports
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: plugins-unit-test-report
          path: ${{ github.workspace }}/**/*/build/reports/*

  lint:
    name: Lint
    needs: build
    permissions:
      contents: read
    runs-on: ubuntu-latest
    concurrency:
      group: lint-${{ github.workflow }}-${{ github.head_ref }}
      cancel-in-progress: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
          ssh-key: ${{ secrets.SSH_KEY }}
          ref: ${{ github.event.pull_request.head.ref }}
          persist-credentials: false
          fetch-depth: 0

      - name: setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          cache-read-only: true

      - name: Validate Gradle Wrapper
        uses: gradle/actions/wrapper-validation@v4

      - name: Restore BuildCache
        uses: actions/cache/restore@v4
        with:
          path: '**/build-cache/**'
          key: build-${{ github.sha }}
          restore-keys: |
            build-${{ github.sha }}
            build-

      - name: Run Formatter
        run: ./gradlew spotlessCheck

      - name: Run static analysis
        run: ./gradlew detekt

      - name: Run Android Lint
        run: ./gradlew lint

      - name: Upload Reports
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: lint-report
          path: ${{ github.workspace }}/*/build/reports/*

  test:
    name: Test
    needs: build
    permissions:
      contents: read
      checks: write
    runs-on: ubuntu-latest
    concurrency:
      group: test-${{ github.workflow }}-${{ github.head_ref }}
      cancel-in-progress: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
          ssh-key: ${{ secrets.SSH_KEY }}
          ref: ${{ github.event.pull_request.head.ref }}
          persist-credentials: false
          fetch-depth: 0

      - name: setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          cache-read-only: true

      - name: Validate Gradle Wrapper
        uses: gradle/actions/wrapper-validation@v4

      - name: Restore BuildCache
        uses: actions/cache/restore@v4
        with:
          path: '**/build-cache/**'
          key: build-${{ github.sha }}
          restore-keys: |
            build-${{ github.sha }}
            build-

      - name: Run UnitTests
        run: ./gradlew allTests test -x testStagingReleaseUnitTest -x testUatReleaseUnitTest -x testUatDebugUnitTest -x testReleaseUnitTest -x verifyCommonMainCraftspeopleAppDBMigration

      - name: Create Coverage Report
        run: ./gradlew :koverXmlReport --stacktrace -x :android:koverGenerateArtifactProductionRelease -x :android:koverGenerateArtifactStagingRelease -x :android:koverGenerateArtifactStagingDebug -x :android:koverGenerateArtifactUatRelease -x :android:koverGenerateArtifactUatDebug -x koverGenerateArtifactRelease

      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v5
        with:
          report_paths: '**/build/test-results/**/TEST-*.xml'

      - name: Upload Test Reports
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: unitTest-report
          path: |
            ${{ github.workspace }}/**/build/reports/*
            ${{ github.workspace }}/**/build/outputs/roborazzi/*
            ${{ github.workspace }}/**/snapshots/*